/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UniswapV3TwapPriceOracle,
  UniswapV3TwapPriceOracleInterface,
} from "../UniswapV3TwapPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapV3Factory",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_feeTier",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TWAP_PERIOD",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTier",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516112173803806112178339818101604052604081101561003357600080fd5b5080516020909101516001600160a01b03821661004f57600080fd5b8062ffffff166101f4148061006a57508062ffffff16610bb8145b8061007b57508062ffffff16612710145b61008457600080fd5b606082901b6001600160601b03191660805260e881901b6001600160e81b03191660a0526001600160a01b039091169062ffffff166111376100e06000398061018f528061045252508061016b528061047e52506111376000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ad5c464811610050578063ad5c4648146100e9578063aea91078146100f1578063fc57d4df1461013657610072565b80635b5491821461007757806372f5d98a146100a85780637ca25184146100c8575b600080fd5b61007f610169565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100b061018d565b6040805162ffffff9092168252519081900360200190f35b6100d06101b1565b6040805163ffffffff9092168252519081900360200190f35b61007f6101b7565b6101246004803603602081101561010757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101cf565b60408051918252519081900360200190f35b6101246004803603602081101561014c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101e2565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61025881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b60006101da826103ab565b90505b919050565b60008173ffffffffffffffffffffffffffffffffffffffff1663ac784ddc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022a57600080fd5b505afa15801561023e573d6000803e3d6000fd5b505050506040513d602081101561025457600080fd5b50511561026a5750670de0b6b3a76400006101dd565b60008273ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b257600080fd5b505afa1580156102c6573d6000803e3d6000fd5b505050506040513d60208110156102dc57600080fd5b5051604080517f313ce567000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff84169163313ce567916004808301926020929190829003018186803b15801561034a57600080fd5b505afa15801561035e573d6000803e3d6000fd5b505050506040513d602081101561037457600080fd5b505160ff16600a0a90506103a38161039d670de0b6b3a7640000610397866103ab565b906105a8565b90610624565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc214156103ee5750670de0b6b3a76400006101dd565b604080517f1698ee8200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2602483015262ffffff7f000000000000000000000000000000000000000000000000000000000000000016604483015291516000927f00000000000000000000000000000000000000000000000000000000000000001691631698ee82916064808301926020929190829003018186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d60208110156104ee57600080fd5b505190506000610500826102586106a5565b50905060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054b57600080fd5b505afa15801561055f573d6000803e3d6000fd5b505050506040513d602081101561057557600080fd5b505160ff16600a0a905061059f82828773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610ad6565b95945050505050565b6000826105b75750600061061e565b828202828482816105c457fe5b041461061b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806110e16021913960400191505060405180910390fd5b90505b92915050565b600080821161069457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161069d57fe5b049392505050565b60008063ffffffff831661071a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4250000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6040805160028082526060808301845292602083019080368337019050509050838160008151811061074857fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061077157fe5b63ffffffff9092166020928302919091018201526040517f883bdbfd00000000000000000000000000000000000000000000000000000000815260048101828152835160248301528351606093849373ffffffffffffffffffffffffffffffffffffffff8b169363883bdbfd93889391928392604490910191858201910280838360005b8381101561080d5781810151838201526020016107f5565b505050509050019250505060006040518083038186803b15801561083057600080fd5b505afa158015610844573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604090815281101561088b57600080fd5b81019080805160405193929190846401000000008211156108ab57600080fd5b9083019060208201858111156108c057600080fd5b82518660208202830111640100000000821117156108dd57600080fd5b82525081516020918201928201910280838360005b8381101561090a5781810151838201526020016108f2565b505050509050016040526020018051604051939291908464010000000082111561093357600080fd5b90830190602082018581111561094857600080fd5b825186602082028301116401000000008211171561096557600080fd5b82525081516020918201928201910280838360005b8381101561099257818101518382015260200161097a565b50505050905001604052505050915091506000826000815181106109b257fe5b6020026020010151836001815181106109c757fe5b60200260200101510390506000826000815181106109e157fe5b6020026020010151836001815181106109f657fe5b60200260200101510390508763ffffffff168260060b81610a1357fe5b05965060008260060b128015610a3d57508763ffffffff168260060b81610a3657fe5b0760060b15155b15610a68577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909601955b63ffffffff881673ffffffffffffffffffffffffffffffffffffffff0277ffffffffffffffffffffffffffffffffffffffff00000000602083901b1677ffffffffffffffffffffffffffffffffffffffffffffffff821681610ac657fe5b0496505050505050509250929050565b600080610ae286610c7f565b90506fffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff821611610bb05773ffffffffffffffffffffffffffffffffffffffff80821680029084811690861610610b7257610b6d7801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611012565b610ba8565b610ba881876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000611012565b925050610c76565b6000610bdc73ffffffffffffffffffffffffffffffffffffffff83168068010000000000000000611012565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610c4457610c3f700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611012565b610c72565b610c7281876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000611012565b9250505b50949350505050565b60008060008360020b12610c96578260020b610c9e565b8260020b6000035b9050620d89e8811115610d1257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600060018216610d3357700100000000000000000000000000000000610d45565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610d79576ffff97272373d413259a46990580e213a0260801c5b6004821615610d98576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610db7576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610dd6576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610df5576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610e14576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610e33576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610e53576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610e73576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610e93576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610eb3576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610ed3576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610ef3576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610f13576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610f33576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610f54576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610f74576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610f93576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610fb0576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610fe957807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610fe557fe5b0490505b640100000000810615610ffd576001611000565b60005b60ff16602082901c0192505050919050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870986860292508281109083900303905080611066576000841161105b57600080fd5b5082900490506110d9565b80841161107257600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220ac681803e708be407f66c3fdc0f84d46b0e9a357de569be6f61a78ea17ce38e664736f6c634300060c0033";

type UniswapV3TwapPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3TwapPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3TwapPriceOracle__factory extends ContractFactory {
  constructor(...args: UniswapV3TwapPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _uniswapV3Factory: PromiseOrValue<string>,
    _feeTier: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3TwapPriceOracle> {
    return super.deploy(
      _uniswapV3Factory,
      _feeTier,
      overrides || {}
    ) as Promise<UniswapV3TwapPriceOracle>;
  }
  override getDeployTransaction(
    _uniswapV3Factory: PromiseOrValue<string>,
    _feeTier: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _uniswapV3Factory,
      _feeTier,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3TwapPriceOracle {
    return super.attach(address) as UniswapV3TwapPriceOracle;
  }
  override connect(signer: Signer): UniswapV3TwapPriceOracle__factory {
    return super.connect(signer) as UniswapV3TwapPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3TwapPriceOracleInterface {
    return new utils.Interface(_abi) as UniswapV3TwapPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3TwapPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3TwapPriceOracle;
  }
}
